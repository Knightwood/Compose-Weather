[versions]
kotlin_version = "2.0.21"
gradle_plugin_version = "8.5.1"
androidTools = "31.4.0"
###########################谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等#########################
androidx_core = "1.12.0"
appcompat = "1.6.1"
fragment-ktx = "1.6.1"
activity-ktx = "1.9.0"

google_material = "1.12.0"
androidx_constraintLayout = "2.1.4"
#datastore
datastore-version = "1.0.0"

#lifecycle
lifecycle_version = "2.7.0"
#测试
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
#work
androidx_work = "2.8.1"
#kotlin
kotlin_coroutines = "1.9.0"
#网络
okhttp_ver = "4.11.0"
retrofit2 = "2.11.0"
retrofit2_converter_scalars = "2.6.2"
retrofit2_interceptor_logging = "4.2.0"
annotation="1.8.2"

##################################################其他依赖的版本#########################################


[libraries]
############################################## Kotlin Gradle插件依赖库 ##################################################
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin_version" }

################################################### gradle插件依赖库 ##################################################
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "gradle_plugin_version" }

# Dependencies of the included build-logic
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin_version" }

########################## 谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等 #########################
#AndroidX核心库
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx_core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity-ktx" }
androidx-annotation={module = "androidx.annotation:annotation", version.ref = "annotation"}
google-android-commons={module="com.google.android:commons",version="20.3.10"}
############################ 测试 ###########################
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }

############################ 布局组件库 ###########################
google-material = { module = "com.google.android.material:material", version.ref = "google_material" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx_constraintLayout" }
########################### Datastore依赖库 ################################
# Preferences DataStore（可以直接使用）
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-version" }
# Preferences DataStore （没有Android依赖项，包含仅适用于 Kotlin 的核心 API）
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore-version" }
# Typed DataStore （Proto DataStore）
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore-version" }
# Typed DataStore （没有Android依赖项，包含仅适用于 Kotlin 的核心 API）
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore-version" }

########################### Lifecycle依赖库 ################################
# ViewModel
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
# Lifecycles only = { module =without ViewModel or LiveData}
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle_version" }

############################ work ###########################
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx_work" }

################################## kotlin依赖 #########################################
kotlin-serialization-ktolin = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.7.3" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin_coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin_coroutines" }

################################## 网络 #########################################
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp_ver" }
retrofit2-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2-interceptor-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "retrofit2_interceptor_logging" }
retrofit2-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2_converter_scalars" }
retrofit2-converter-kotlin = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version = "2.11.0" }

################################## 其他依赖 #########################################


[plugins]
#application和library插件
android-application = { id = "com.android.application", version.ref = "gradle_plugin_version" }
android-library = { id = "com.android.library", version.ref = "gradle_plugin_version" }
#kotlin支持
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin_version" }
#compose编译器
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin_version" }
##################################内建插件#########################################
# Plugins defined by this project
buildLogic-android-app = { id = "kiylx.build_logic.android.application", version = "unspecified" }
buildLogic-android-library = { id = "kiylx.build_logic.android.library", version = "unspecified" }
buildLogic-android-compose = { id = "kiylx.build_logic.android.compose", version = "unspecified" }

##################################其他插件#########################################
# kotlin序列化插件的版本会跟kotlin编译器同时发布，因此一致
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin_version" }


[bundles]
bundleAndroidx = [
    "androidx-appCompat", "androidx-core-ktx",
    "androidx-fragment-ktx", "androidx-activity-ktx",
    "lifecycle-runtime-ktx", "lifecycle-viewmodel-ktx",
    "androidx-constraintLayout"
]

dataStore = ["androidx-datastore", "androidx-datastore-preferences"]

kotlins = ["kotlin-coroutines-core", "kotlin-coroutines-android"]

retrofit2 = [
    "retrofit2-core", "retrofit2-converter-scalars", "kotlin-serialization-ktolin",
    "retrofit2-converter-kotlin", "retrofit2-interceptor-logging"
]